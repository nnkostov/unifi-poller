# Powered by Application Builder: https://github.com/golift/application-builder
language: go
git:
  depth: false
addons:
  apt:
    packages:
    - ruby-dev
    - rpm
    - build-essential
    - git
    - libgnome-keyring-dev
    - fakeroot
    - zip
    - debsigs
    - gnupg
    - expect
go:
- 1.12.x
services:
  - docker
install:
  - mkdir -p $GOPATH/bin
  # Download the `dep` binary to bin folder in $GOPATH
  - curl -sLo $GOPATH/bin/dep https://github.com/golang/dep/releases/download/v0.5.3/dep-linux-amd64
  - chmod +x $GOPATH/bin/dep
  # download super-linter: golangci-lint
  - curl -sL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin latest
  - rvm install 2.0.0
  - rvm 2.0.0 do gem install --no-document fpm
before_script:
  - gpg --import gpg.public.key
  # Create your own deploy key, tar it, and encrypt the file to make this work. Optionally add a bitly_token file to the archive.
  - openssl aes-256-cbc -K $encrypted_9f3147001275_key -iv $encrypted_9f3147001275_iv -in .secret-files.tar.enc -out .secret-files.tar -d
  - tar -xf .secret-files.tar
  - gpg --import gpg.signing.key
  - rm -f gpg.signing.key .secret-files.tar
  - source .metadata.sh
  - make vendor
script:
  # Test Go and Docker.
  - make test
  - make docker
  # Test built docker image.
  - docker run $BINARY -v 2>&1 | grep -Eq "^$BINARY v$VERSION"
  # Build everything
  - rvm 2.0.0 do make release
after_success:
  # Display Release Folder
  - ls -l release/
  # Setup the ssh client so we can clone and push to the homebrew formula repo.
  # You must put github_deploy_file into .secret_files.tar.enc
  # This is an ssh key added to your homebrew forumla repo.
  - |
    mkdir -p $HOME/.ssh
    declare -r SSH_FILE="$(mktemp -u $HOME/.ssh/XXXXX)"
    echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> $HOME/.ssh/config
    [ ! -f github_deploy_key ] || (mv github_deploy_key $SSH_FILE \
      && chmod 600 "$SSH_FILE" \
      && printf "%s\n" \
        "Host github.com" \
        "  IdentityFile $SSH_FILE" \
        "  StrictHostKeyChecking no" \
        "  LogLevel ERROR" >> $HOME/.ssh/config)
deploy:
  - provider: releases
    api_key:
      secure: GsvW0m+EnRELQMk8DjH63VXinqbwse4FJ4vNUslOE6CZ8PBXPrH0ZgaI7ic/uxRtm7CYj0sir4CZq62W5l6uhoXCCQfjOnmJspqnQcrFZ1xRdWktsNXaRwM6hlzaUThsJ/1PD9Psc66uKXBYTg0IlUz0yjZAZk7tCUE4libuj41z40ZKxUcbfcNvH4Njc9IpNB4QSA3ss+a9/6ZwBz4tHVamsGIrzaE0Zf99ItNBYvaOwhM2rC/NWIsFmwt8w4rIA2NIrkZgMDV+Z2Niqh4JRLAWCQNx/RjC5U52lG2yhqivUC3TromZ+q4O4alUltsyIzF2nVanLWgJmbeFo8uXT5A+gd3ovSkFLU9medXd9i4kap7kN/o5m9p5QZvrdEYHEmIU4ml5rjT2EQQVy5CtSmpiRAbhpEJIvA1wDtRq8rdz8IVfJXkHNjg2XdouNmMMWqa3OkEPw21+uxsqv4LscW/6ZjsavzL5SSdnBRU9n79EfGJE/tJLKiNumah/vLuJ5buNhgqmCdtX/Tg+DhQS1BOyYg4l4L8s9IIKZgFRwrOPsZnA/KsrWg4ZsjJ87cqKCaT/qs2EJx5odZcZWJYLBngeO8Tc6cQtLgJdieY2oEKo51Agq4rgikZDt21m6TY9/R5lPN0piwdpy3ZGKfv1ijXx74raMT03qskputzMCvc=
    overwrite: true
    skip_cleanup: true
    file_glob: true
    file: release/*
    on:
      tags: true
  - provider: script
    script: scripts/formula-deploy.sh
    on:
      tags: true
  - provider: script
    script: scripts/package-deploy.sh
    skip_cleanup: true
    on:
      all_branches: true
      condition: $TRAVIS_BRANCH =~ ^(master|v[0-9.]+)$
